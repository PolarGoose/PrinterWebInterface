@page
@model IndexModel
@{
    ViewData["Title"] = "Upload a file";
}

<form enctype="multipart/form-data" method="post">
    <section>
        <section>
            <h6>Printer status: </h6>
            <pre>@Model.Input.PrinterStatus</pre>
            <p />
            <h6>File to print</h6>
            <input asp-for="Input.FileUpload" type="file" accept=".pdf" />
            <p />
            <span asp-validation-for="Input.FileUpload" class="text-danger" />
        </section>
        <p/>
        <section>
            <h6>Number of copies (required)</h6>
            <input type="number" min="1" asp-for="Input.NumCopies"/>
            <p/>
            <span asp-validation-for="Input.NumCopies" class="text-danger"/>
        </section>
    </section>
    <section>
        <section>
            <h6>Page range (optional)</h6>
            <input type="text" asp-for="Input.PrintRange"/>
            <span asp-validation-for="Input.PrintRange" class="text-danger"/>
        </section>
        <section>
            <p class="text-muted"> Can contain a list of numbers and ranges (#-#) separated by commas, e.g., "1,3-5,16".</p>
        </section>
    </section>
    <p/>
    <input type="submit" value="Print" asp-page-handler="Print" class="btn btn-outline-dark" style="width: 200px"/>
    <p/>
    <input type="submit" value="Cancel all jobs" asp-page-handler="Cancel" formnovalidate class="btn btn-outline-dark" style="margin-top: 20px"/>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
